# This file is auto-generated from the current state of the database. Instead
# of editing this file, please use the migrations feature of Active Record to
# incrementally modify your database, and then regenerate this schema definition.
#
# Note that this schema.rb definition is the authoritative source for your
# database schema. If you need to create the application database on another
# system, you should be using db:schema:load, not running all the migrations
# from scratch. The latter is a flawed and unsustainable approach (the more migrations
# you'll amass, the slower it'll run and the greater likelihood for issues).
#
# It's strongly recommended that you check this file into your version control system.

ActiveRecord::Schema.define(version: 20180321175722) do

  # These are extensions that must be enabled in order to support this database
  enable_extension "plpgsql"

  create_table "bencostshares", force: :cascade do |t|
    t.string   "businessyear"
    t.string   "statecode"
    t.string   "issuerid"
    t.string   "sourcename"
    t.string   "versionnum"
    t.date     "importdate"
    t.string   "issuerid2"
    t.string   "statecode2"
    t.string   "standardcomponentid"
    t.string   "planid"
    t.string   "benefitname"
    t.string   "copayinntier1"
    t.string   "copayinntier2"
    t.string   "copayoutofnet"
    t.string   "coinsinntier1"
    t.string   "coinsinntier2"
    t.string   "coinsoutofnet"
    t.string   "isehb"
    t.string   "isstatemandate"
    t.string   "iscovered"
    t.string   "quantlimitonsvc"
    t.string   "limitqty"
    t.string   "limitunit"
    t.string   "minimumstay"
    t.string   "exclusions"
    t.string   "explanation"
    t.string   "ehbvarreason"
    t.string   "issubjtodedtier1"
    t.string   "issubjtodedtier2"
    t.string   "isexclfrominnmoop"
    t.string   "isexclfromoonmoop"
    t.string   "rownumber"
    t.datetime "created_at",          null: false
    t.datetime "updated_at",          null: false
  end

  create_table "businessrules", force: :cascade do |t|
    t.string   "businessyear"
    t.string   "statecode"
    t.string   "issuerid"
    t.string   "sourcename"
    t.string   "versionnum"
    t.datetime "importdate"
    t.string   "issuerid2"
    t.string   "tin"
    t.string   "productid"
    t.string   "standardcomponentid"
    t.string   "enrolleecontractratedeterminationrule"
    t.string   "twoparentfamilymaxdependentsrule"
    t.string   "singleparentfamilymaxdependentsrule"
    t.string   "dependentmaximumagrule"
    t.string   "childrenonlycontractmaxchildrenrule"
    t.string   "domesticpartnerasspouseindicator"
    t.string   "samesexpartnerasspouseindicator"
    t.string   "agedeterminationrule"
    t.string   "minimumtobaccofreemonthsrule"
    t.string   "cohabitationrule"
    t.string   "rownumber"
    t.string   "marketcoverage"
    t.string   "dentalonlyplan"
    t.datetime "created_at",                            null: false
    t.datetime "updated_at",                            null: false
  end

  create_table "crosswalks", force: :cascade do |t|
    t.string   "state"
    t.string   "dentalplan"
    t.string   "planid_2017"
    t.string   "issuerid_2017"
    t.string   "multistateplan_2017"
    t.string   "metallevel_2017"
    t.string   "childadultonly_2017"
    t.string   "fipscode"
    t.string   "zipcode"
    t.string   "crosswalklevel"
    t.string   "reasonforcrosswalk"
    t.string   "planid_2018"
    t.string   "issuerid_2018"
    t.string   "multistateplan_2018"
    t.string   "metallevel_2018"
    t.string   "childadultonly_2018"
    t.string   "ageoffplanid_2018"
    t.string   "issuerid_ageoff2018"
    t.string   "multistateplan_ageoff2018"
    t.string   "metallevel_ageoff2018"
    t.string   "childadultonly_ageoff2018"
    t.datetime "created_at",                null: false
    t.datetime "updated_at",                null: false
  end

  create_table "fpls", force: :cascade do |t|
    t.text     "nindivs"
    t.text     "alaska"
    t.text     "hawaii"
    t.datetime "created_at", null: false
    t.datetime "updated_at", null: false
    t.text     "year"
    t.text     "contiguous"
  end

  create_table "networks", force: :cascade do |t|
    t.string   "businessyear"
    t.string   "statecode"
    t.string   "issuerid"
    t.string   "sourcename"
    t.datetime "importdate"
    t.string   "networkname"
    t.string   "networkid"
    t.string   "networkurl"
    t.string   "marketcoverage"
    t.string   "dentalonlyplan"
    t.datetime "created_at",     null: false
    t.datetime "updated_at",     null: false
  end

  create_table "plans", force: :cascade do |t|
    t.string   "businessyear"
    t.string   "statecode"
    t.string   "issuerid"
    t.string   "sourcename"
    t.string   "versionnum"
    t.datetime "importdate"
    t.string   "benefitpackageid"
    t.string   "issuerid2"
    t.string   "statecode2"
    t.string   "marketcoverage"
    t.string   "dentalonlyplan"
    t.string   "tin"
    t.string   "standardcomponentid"
    t.string   "planmarketingname"
    t.string   "hiosproductid"
    t.string   "hpid"
    t.string   "networkid"
    t.string   "serviceareaid"
    t.string   "formularyid"
    t.string   "isnewplan"
    t.string   "plantype"
    t.string   "metallevel"
    t.string   "designtype"
    t.string   "uniqueplandesign"
    t.string   "qhpnonqhptypeid"
    t.string   "isnoticerequiredforpregnancy"
    t.string   "isreferralrequiredforspecialist"
    t.string   "specialistrequiringreferral"
    t.string   "planlevelexclusions"
    t.string   "indianplanvariationestimatedadvancedpaymentamountperenrollee"
    t.string   "compositeratingoffered"
    t.string   "childonlyoffering"
    t.string   "childonlyplanid"
    t.string   "wellnessprogramoffered"
    t.string   "diseasemanagementprogramsoffered"
    t.string   "ehbpercenttotalpremium"
    t.string   "ehbpediatricdentalapportionmentquantity"
    t.string   "isguaranteedrate"
    t.date     "planeffectivedate"
    t.date     "planexpirationdate"
    t.string   "outofcountrycoverage"
    t.string   "outofcountrycoveragedescription"
    t.string   "outofserviceareacoverage"
    t.string   "outofserviceareacoveragedescription"
    t.string   "nationalnetwork"
    t.string   "urlforenrollmentpayment"
    t.string   "formularyurl"
    t.string   "planid"
    t.string   "planvariantmarketingname"
    t.string   "csrvariationtype"
    t.string   "issueractuarialvalue"
    t.string   "avcalculatoroutputnumber"
    t.string   "medicaldrugdeductiblesintegrated"
    t.string   "medicaldrugmaximumoutofpocketintegrated"
    t.string   "multipleinnetworktiers"
    t.string   "firsttierutilization"
    t.string   "secondtierutilization"
    t.string   "sbchavingababydeductible"
    t.string   "sbchavingababycopayment"
    t.string   "sbchavingababycoinsurance"
    t.string   "sbchavingababylimit"
    t.string   "sbchavingdiabetesdeductible"
    t.string   "sbchavingdiabetescopayment"
    t.string   "sbchavingdiabetescoinsurance"
    t.string   "sbchavingdiabeteslimit"
    t.string   "sbchavingsimplefracturedeductible"
    t.string   "sbchavingsimplefracturecopayment"
    t.string   "sbchavingsimplefracturecoinsurance"
    t.string   "sbchavingsimplefracturelimit"
    t.string   "specialtydrugmaximumcoinsurance"
    t.string   "inpatientcopaymentmaximumdays"
    t.string   "beginprimarycarecostsharingafternumberofvisits"
    t.string   "beginprimarycaredeductiblecoinsuranceafternumberofcopays"
    t.string   "mehbinntier1individualmoop"
    t.string   "mehbinntier1familyperpersonmoop"
    t.string   "mehbinntier1familypergroupmoop"
    t.string   "mehbinntier2individualmoop"
    t.string   "mehbinntier2familyperpersonmoop"
    t.string   "mehbinntier2familypergroupmoop"
    t.string   "mehboutofnetindividualmoop"
    t.string   "mehboutofnetfamilyperpersonmoop"
    t.string   "mehboutofnetfamilypergroupmoop"
    t.string   "mehbcombinnoonindividualmoop"
    t.string   "mehbcombinnoonfamilyperpersonmoop"
    t.string   "mehbcombinnoonfamilypergroupmoop"
    t.string   "dehbinntier1individualmoop"
    t.string   "dehbinntier1familyperpersonmoop"
    t.string   "dehbinntier1familypergroupmoop"
    t.string   "dehbinntier2individualmoop"
    t.string   "dehbinntier2familyperpersonmoop"
    t.string   "dehbinntier2familypergroupmoop"
    t.string   "dehboutofnetindividualmoop"
    t.string   "dehboutofnetfamilyperpersonmoop"
    t.string   "dehboutofnetfamilypergroupmoop"
    t.string   "dehbcombinnoonindividualmoop"
    t.string   "dehbcombinnoonfamilyperpersonmoop"
    t.string   "dehbcombinnoonfamilypergroupmoop"
    t.string   "tehbinntier1individualmoop"
    t.string   "tehbinntier1familyperpersonmoop"
    t.string   "tehbinntier1familypergroupmoop"
    t.string   "tehbinntier2individualmoop"
    t.string   "tehbinntier2familyperpersonmoop"
    t.string   "tehbinntier2familypergroupmoop"
    t.string   "tehboutofnetindividualmoop"
    t.string   "tehboutofnetfamilyperpersonmoop"
    t.string   "tehboutofnetfamilypergroupmoop"
    t.string   "tehbcombinnoonindividualmoop"
    t.string   "tehbcombinnoonfamilyperpersonmoop"
    t.string   "tehbcombinnoonfamilypergroupmoop"
    t.string   "mehbdedinntier1individual"
    t.string   "mehbdedinntier1familyperperson"
    t.string   "mehbdedinntier1familypergroup"
    t.string   "mehbdedinntier1coinsurance"
    t.string   "mehbdedinntier2individual"
    t.string   "mehbdedinntier2familyperperson"
    t.string   "mehbdedinntier2familypergroup"
    t.string   "mehbdedinntier2coinsurance"
    t.string   "mehbdedoutofnetindividual"
    t.string   "mehbdedoutofnetfamilyperperson"
    t.string   "mehbdedoutofnetfamilypergroup"
    t.string   "mehbdedcombinnoonindividual"
    t.string   "mehbdedcombinnoonfamilyperperson"
    t.string   "mehbdedcombinnoonfamilypergroup"
    t.string   "dehbdedinntier1individual"
    t.string   "dehbdedinntier1familyperperson"
    t.string   "dehbdedinntier1familypergroup"
    t.string   "dehbdedinntier1coinsurance"
    t.string   "dehbdedinntier2individual"
    t.string   "dehbdedinntier2familyperperson"
    t.string   "dehbdedinntier2familypergroup"
    t.string   "dehbdedinntier2coinsurance"
    t.string   "dehbdedoutofnetindividual"
    t.string   "dehbdedoutofnetfamilyperperson"
    t.string   "dehbdedoutofnetfamilypergroup"
    t.string   "dehbdedcombinnoonindividual"
    t.string   "dehbdedcombinnoonfamilyperperson"
    t.string   "dehbdedcombinnoonfamilypergroup"
    t.string   "tehbdedinntier1individual"
    t.string   "tehbdedinntier1familyperperson"
    t.string   "tehbdedinntier1familypergroup"
    t.string   "tehbdedinntier1coinsurance"
    t.string   "tehbdedinntier2individual"
    t.string   "tehbdedinntier2familyperperson"
    t.string   "tehbdedinntier2familypergroup"
    t.string   "tehbdedinntier2coinsurance"
    t.string   "tehbdedoutofnetindividual"
    t.string   "tehbdedoutofnetfamilyperperson"
    t.string   "tehbdedoutofnetfamilypergroup"
    t.string   "tehbdedcombinnoonindividual"
    t.string   "tehbdedcombinnoonfamilyperperson"
    t.string   "tehbdedcombinnoonfamilypergroup"
    t.string   "ishsaeligible"
    t.string   "hsaorhraemployercontribution"
    t.string   "hsaorhraemployercontributionamount"
    t.string   "urlforsummaryofbenefitscoverage"
    t.string   "planbrochure"
    t.string   "rownumber"
    t.datetime "created_at",                                                   null: false
    t.datetime "updated_at",                                                   null: false
  end

  create_table "qualities", force: :cascade do |t|
    t.string   "issuerid"
    t.string   "planid"
    t.string   "globalratingvalue"
    t.string   "enrilleeexperienceratingvalue"
    t.string   "planefficiencyaffordabilitymanagementratingvalue"
    t.string   "clinicalqualitymanagementratingvalue"
    t.string   "notratedreason_globalratingdesc"
    t.string   "notratedreason_enrolleeexperienceratingdesc"
    t.string   "notratedreason_planefficiencyaffordabilitymanagementratingdesc"
    t.string   "notratedreason_clinicalqualitymanagementratingdesc"
    t.datetime "created_at",                                                     null: false
    t.datetime "updated_at",                                                     null: false
  end

  create_table "rates", force: :cascade do |t|
    t.string   "businessyear"
    t.string   "statecode"
    t.string   "issuerid"
    t.string   "sourcename"
    t.string   "versionnum"
    t.datetime "importdate"
    t.string   "issuerid2"
    t.string   "federaltin"
    t.string   "rateeffectivedate"
    t.string   "rateexpirationdate"
    t.string   "planid"
    t.string   "ratingareaid"
    t.string   "tobacco"
    t.string   "age"
    t.string   "individualrate"
    t.string   "individualtobaccorate"
    t.string   "couple"
    t.string   "primarysubscriberandonedependent"
    t.string   "primarysubscriberandtwodependents"
    t.string   "primarysubscriberandthreeormoredependents"
    t.string   "coupleandonedependent"
    t.string   "coupleandtwodependents"
    t.string   "coupleandthreeormoredependents"
    t.string   "rownumber"
    t.datetime "created_at",                                null: false
    t.datetime "updated_at",                                null: false
  end

  create_table "serviceareas", force: :cascade do |t|
    t.string   "businessyear"
    t.string   "statecode"
    t.string   "issuerid"
    t.string   "sourcename"
    t.datetime "importdate"
    t.string   "serviceareaid"
    t.string   "serviceareaname"
    t.string   "coverentirestate"
    t.string   "county"
    t.string   "partialcounty"
    t.string   "zipcodes"
    t.string   "partialcountyjustification"
    t.string   "marketcoverage"
    t.string   "dentalonlyplan"
    t.datetime "created_at",                 null: false
    t.datetime "updated_at",                 null: false
  end

  create_table "transparencies", force: :cascade do |t|
    t.text     "state"
    t.text     "issuername"
    t.text     "issuerid"
    t.text     "issuerdbaifapplicable"
    t.text     "urlclaimspolicies"
    t.text     "numberofclaims2015"
    t.text     "numberofclaimsdenials"
    t.text     "numberofinternalappealsfiled"
    t.text     "numberofinternalappealsoverturned"
    t.text     "percentofinternalappealsoverturned"
    t.text     "numberofexternalappealsfiled"
    t.text     "numberofexternalappealsoverturned"
    t.text     "percentofexternalappealsoverturned"
    t.text     "financialinformation"
    t.text     "enrollmentdata"
    t.text     "disenrollmentdata"
    t.datetime "created_at",                         null: false
    t.datetime "updated_at",                         null: false
  end

  create_table "zipmappings", force: :cascade do |t|
    t.string   "fullzip"
    t.string   "zip"
    t.string   "state_code"
    t.string   "county"
    t.string   "res_ratio"
    t.string   "bus_ratio"
    t.string   "oth_ratio"
    t.string   "tot_ratio"
    t.string   "county_name"
    t.string   "rating_area"
    t.datetime "created_at",  null: false
    t.datetime "updated_at",  null: false
  end

end
